#summary The current status of the system.
<wiki:toc max_depth="3"/>

= Deliverable 3 =
== High Level Analysis ==

=== State of Project Build ===

Currently the project builds a binary and runs the alpha of our game. 

The application can be loaded onto an Android phone and run the same as on the AVD.  

There is also a smoke test implemented and can be run to ensure project quality before commit.

=== Features Implemented ===

Build completes.

Program runs correctly.

Loads the grid play area and simple game level.

Touch features such as pinch and swipe work well.  Swipe moves the camera around the grid, while pinch zooms in and out.  Some refinement may still need to be done.

Game tools logically work i.e. prisms split light, mirrors bounce light etc.

Toolbelt is fully functional and can be interacted with.  Objects can be selected from the toolbelt and placed on the grid.

Essentially a basic level is loaded and can be interacted with.

Level loader is fully functional.

Fully intractable GUI is implemented, though not integrated as of yet.

=== Features to Be Implemented ===

Touch screen GUI - GUI is designed, needs to be integrated into the application.  

Enhanced graphics - simple graphics currently implemented.

Full audio capabilities.

100+ levels.

Random level generator.

=== STI/Defect Information ===

Defects and bugs can be viewed here: http://code.google.com/p/cmpt371t1/issues/list

Common problems of the development environment can be found here: CommonIssues

== Specific Status Report ==
*Resource Manager*
  * Capable of loading and managing all necessary resources.
  * Creates OpenGL textures out of images.
  * Audio resources are capable of loading, but playback (in other system) still broken.

*Input*
  * Use of !ReplicaIsland open source code.
  * Touch and drag inputs are currently stable.
  * Pinch for zooming are now working.

*GUI*
  * Rendered using OpenGL quads.
  * Menu primitives robust
  * GUIManager created; responsible for managing buttons and labels
  * Buttons created, can perform action on tap.

*Level Loader*
  * Level information stored in XML files.
  * Loader takes in an XML file and parses it to create an object containing all level information.
  * Loader currently stable.

*Graphics*
  * Basic primitives (sphere, box, etc.).
  * Full grid, background and general play space implemented.
  * Basic textures load onto play tools.  

*Game* 
  * Currently draws a grid and loads a pre-defined level.
  * User is able to interact with the game.  They are able to place tools from the toolbelt on the grid.  These tools work the way that they should.  The light interacts with the tools logically and correctly.
  * Toolbelt is implemented and working, but may benefit from refactoring some functionality to a higher level

*Smoke Test*
  * Currently runs on the !TeamCity server.
  * Tests all source classes using the TestSuite.

*GUI Testing*
  * Use of Robotium.
  * Full test suite under construction.

*Unit Tests*
  * Complete with respect to the current source code completion.
  * Will be updated as more source is changed/added.

*Coverage Testing*
  * Use of EMMA to do coverage testing.
  * Fully functional and produces many statistics and information.

*Mock Testing*
  * Basic Mocking underway
  * Currently incomplete.

== Overall Status of Game ==
 Currently loads the grid that will be where the levels will be created to be played.  The !SkyBox that is used to display the background works on both the emulator and the android phone now.  All textures load properly as well.  A simple level is loaded and is fully playable, though more functionality and levels are planned to be added.

 The user can interact with the level as we had intended.  They can touch and swipe to move the camera around and pinch for zooming.  They can also tap the toolbelt to select a tool they wish to place on the grid, and are able to do so.  With this, there is currently the issue of 
if the user goes to move the camera with an object selected in the toolbelt, the tool will be placed on the grid.

 The project can also be loaded into a Menu state if you un-comment line 65 Luminance.java in the method !OnCreate.  From here, two buttons are loaded.  Every time the menu is clicked, a log message is sent to the logger as "Menu has been touched".  If a button is tapped, then "Button has been tapped" is sent to the logger, therefore showing these buttons work.

= Deliverable 2 =
== High Level Analysis ==

=== State of Project Build ===

Currently the project builds a binary and runs a simple version of our game. 

The application can be loaded onto an Android phone and run the same as on the AVD.  

There is also a simple and as of yet incomplete smoke test implemented and can be run to ensure project quality before commit.

=== Features Implemented ===

Build completes.

Program runs correctly.

Loads the grid play area, as well as multiple boxes and spheres to represent a level.

Touch features such as pinch and swipe work well.  Some refinement may still need to be done.

=== Features to Be Implemented ===

Touch screen GUI - basic elements created & fleshed out, buttons tappable.

Enhanced graphics - simple graphics currently implemented.

Full audio capabilities.

100+ levels.

Random level generator.

=== STI/Defect Information ===

Currently there are no known STI's or defects within the code.  The test environment was not complete up until this point.  When more tests are implemented, defects and STI's will become more apparent.

Common problems of the development environment can be found here: CommonIssues

== Specific Status Report ==
*Resource Manager*
  * Capable of loading and managing most resources.
  * Simple textures loading.
  * Sound/music implementation understood, although currently not working.

*Input*
  * Use of !ReplicaIsland open source code.
  * Touch and drag inputs are currently stable, although need refining.
  * Pinch(zoom) are now working.

*GUI*
  * Creating our own custom menu primitives.
  * Menu primitives robust
  * GUIManager created; responsible for managing buttons
  * Buttons created, can perform action on tap

*Level Loader*
  * Use of XML to store level information.
  * Loader currently stable.

*Graphics*
  * Basic primitives (sphere, box, etc.).
  * Full grid, background and general play space implemented.

*Game* 
  * Currently draws a grid and loads a pre-defined level.
  * Does not have any playable functionality.

*Smoke Test*
  * Currently runs on the !TeamCity server.
  * It has "three thumbs up" tests currently.
   * Tests suite includes Resource Manager and Input classes.

*GUI Testing*
  * Use of Robotium.
  * Full test suite under construction.

*Unit Tests*
  * Currently underway.
  * Unit Tests that are completed work well; have already caught bugs.

== Overall Status of Game ==
 Currently loads the grid that will be where the levels will be created to be played.  It also loads a simple box and sphere, to show that our primitive objects are working.  The !SkyBox that represents the background works on the emulator, but not on an android phone.  This issue will be need to be resolved.

 When loaded on the phone, touch, swipe and pinch inputs work, although will need to be refined for precision and smoothness.

 The project can also be loaded into a Menu state if you un-comment line 65 Luminance.java in the method !OnCreate.  From here, two buttons are loaded.  Every time the menu is clicked, a log message is sent to the logger as "Menu has been touched".  If a button is tapped, then "Button has been tapped" is sent to the logger, therefore showing these buttons work.  This currently only works on the emulator.