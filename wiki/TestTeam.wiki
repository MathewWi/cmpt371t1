#summary Documentation for the Test Team
#labels Phase-QA

= Introduction =

Will be listing our tasks and now as well as our future plans and Milestone tasks completion based on TestPlan

== Updates ==
  === Milestone 2 ===
    
    ==== Notes ====
      * Two members have gone from the team. Chet has agreed to testing. Its now Jeff, Amara, and Chet
      * Jeff is focusing on Smoke Tests, JUnit
      * Amara is focusing on Robotium, Use-case scenarios, User Scenario Play Test
      * Chet is focusing on JUnit
    
    ==== Tasks Completed ====
      * Smoke test ( Three Thumbs Up!)
      * Plan of User-Scenario Test
      * Use-Case Scenarios
      * Template Ready for Use-case scenario to GUI test
      * Start on JUnit Tests
      * Talk with Dr Kevin Stanley
      * Co-operation with Dev established

    ==== Tasks Uncompleted ====
      * Tests not all implemented


    ==== Estimated Time ====
      40 hours
    ==== Actual Time ====
      60 hours (grabbed from member times as of February 18, 2011)

    ===== Comments =====
      Although the tests are not fully implemented, I believe with Amara's scenarios and research into Robotium will help greatly in the coming Milestone 3. Also, with the main smoke test not running, resources (Me and Chet) can fully get into implementing the full suite of tests and will now be maintenance. The estimated time might've been actual if not for the fact of over-estimating the learning curve and integration of the new technologies. As of this Milestone (2); the test team is a little behind in the tests but I believe it shouldn't take more than a day or two of work to get a good coverage of tests, relative to the dev team's work, implemented. 

== Meeting Times ==
  * Friday, February 18, 2011 at Spinks 342
  * Wednesday, February 16, 2011 at Spinks 342
  * Monday, February 14, 2011 at Spinks 371
  * Friday, February 11, 2011 at Spinks 341
  * Monday, February 7, 2011 at Spinks 360
  * Friday, February 4, 2011 at Spinks 371
  * Monday, January 31, 2011 at Spinks 371
  * Friday, January 27, 2011 at spinks 342

= Test Team: =

Tasks: 

February 16, 2011
  * Chet
    # Test on ResourceManagement package
  * Amara
    # Use-Case Scenarios
    # User Scenario Testing plan
  * Jeff
    # Ant Script
    # Smoke Test
  * ALL
    # Peer/Code review the packages under test.

February 1, 2011
 Since game testing is substantially different from any other software testing, decide between conventional testing vs user hands on testing. Inquire experienced persons(Prof. Stanley, Prof. Osgood) on the best approach to testing game mechanics. Implement ant script on local machine.

  * Ant Script Tutorial: http://ant.apache.org/manual/tutorial-HelloWorldWithAnt.html
  * Developing in other IDEs: http://developer.android.com/guide/developing/other-ide.html
  * Testing in other IDEs: http://developer.android.com/guide/developing/testing/testing_otheride.html

January 28, 2011
  Because the build server does not have Eclipse and teamcity uses ant scripts/builds, I believe these can help us understand how to make an automated smoke test and later, a fully automatic test suite.

  * Ant Script Tutorial: http://ant.apache.org/manual/tutorial-HelloWorldWithAnt.html
  * Developing in other IDEs: http://developer.android.com/guide/developing/other-ide.html
  * Testing in other IDEs: http://developer.android.com/guide/developing/testing/testing_otheride.html


January 27, 2011

  Research testing suites
    * Robotium - UI testing
    * JUnit - Core, smoke test
    * Anything else that you guys might think will be necessary

  If possible, any concept or example of such tests being run (Does not have to use the Luminance
  package) is good.

  Something else to look at is, instead of running eclipse's automatic builds, try and get either ant
  scripting up or command-line build/runs.

  Good site: http://developer.android.com/index.html
      
January 24, 2011
   
  Download eclipse
  Code Coverage: http://update.eclemma.org

  Make a Concept smoke test
  Due: by the end of the week or next meeting.
  
  Create ant script for smoke test,
      * Make it so that it builds a project
      * Upon rejection, don't commit/error
      * Else, run some unit testing/smoke test
 
  Learn how team city works
  
  Eclipse Testing with TeamCity http://www.jetbrains.com/teamcity/features/continuous_integration.html#Remote_Build_Run_and_Pre-Tested_Commit

= Triage: =

Tasks:
February 16, 2011
  Regulate issues

January 24, 2011
  Format issue report form
  Accept and assign issues - Continuous